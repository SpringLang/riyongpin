<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zpark.dao.ProductBigTypeDao">

	<resultMap type="ProductBigType" id="ProductBigTypeResult">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="remarks" column="remarks" />
		
		<!-- 关联商品小类 -->
		<collection property="smallTypeList" javaType="ArrayList" 
		column="id" ofType="com.zpark.entity.ProductSmallType"
		select="com.zpark.dao.ProductSmallTypeDao.findSmallTypeByBigTypeId" >
			<result property="id" column="id" />
			<result property="name" column="name" />
			<result property="remarks" column="remarks" />
		</collection>
	</resultMap>
	

	<!-- 查找所有的商品大类，初始化用到-->
	<select id="findAllBigTypeList" resultMap="ProductBigTypeResult">
		select * from t_bigtype
	</select>


	<!-- 通过商品大类id查找商品大类，用于商品大类与商品小类双向一对多关联 -->
	<select id="findProductBigTypeByBigTypeId" parameterType="Integer" resultMap="ProductBigTypeResult">
		select * from t_bigType where id = #{id}
	</select>

	<select id="findProductBigTypeList" parameterType="Map" resultMap="ProductBigTypeResult">
		select * from t_bigtype
		<where>
			<if test="bigTypeName != null and bigTypeName!='' ">
				name like '%${bigTypeName}%'
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getProductBigTypeCount" parameterType="Map" resultType="Long">
		select count(*) from t_bigtype
		<where>
			<if test="bigTypeName != null and bigTypeName!='' ">
				name like '%${bigTypeName}%'
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<insert id="saveProductBigType" parameterType="ProductBigType">
		insert into t_bigtype values(null,#{name},#{remarks})
	</insert>
	
	<update id="updateProductBigType" parameterType="ProductBigType">
		update t_bigtype set name = #{name},remarks = #{remarks} where id = #{id}
	</update>
	
	<delete id="delete" parameterType="Integer">
		delete from t_bigtype where id = #{id}
	</delete>
	
	<select id="getProductBigTypeById" parameterType="Integer" resultMap="ProductBigTypeResult">
		select * from t_bigtype where id = #{id}
	</select>
</mapper> 